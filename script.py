import telebot
from telebot.types import Message, ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
import textlines as TL
import sqlite3

TOKEN = "7623890164:AAGjbXji5sklmFccgwd3Z30xZRFNS0ZkDU4"

bot = telebot.TeleBot(TOKEN)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
def init_db():
    conn = sqlite3.connect("career_results.db")
    cursor = conn.cursor()
    cursor.execute('''CREATE TABLE IF NOT EXISTS career_results (
                      user_id INTEGER PRIMARY KEY,
                      username TEXT,
                      profession TEXT,
                      phone TEXT)''')
    conn.commit()
    conn.close()

init_db()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def save_result(user_id, username, profession, phone=None):
    conn = sqlite3.connect("career_results.db")
    cursor = conn.cursor()
    cursor.execute("INSERT OR REPLACE INTO career_results (user_id, username, profession, phone) VALUES (?, ?, ?, ?)",
                   (user_id, username if username else "–ù–µ —É–∫–∞–∑–∞–Ω", profession, phone))
    conn.commit()
    conn.close()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
def save_phone_number(user_id, phone_number):
    conn = sqlite3.connect("career_results.db")
    cursor = conn.cursor()
    
    cursor.execute("SELECT phone FROM career_results WHERE user_id = ?", (user_id,))
    existing_phone = cursor.fetchone()

    if existing_phone:
        cursor.execute("UPDATE career_results SET phone = ? WHERE user_id = ?", (phone_number, user_id))
    else:
        cursor.execute("INSERT INTO career_results (user_id, phone) VALUES (?, ?)", (user_id, phone_number))

    conn.commit()
    conn.close()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
menu_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
menu_keyboard.row(KeyboardButton("üìñ –û –∫–æ–ª–ª–µ–¥–∂–µ"))
menu_keyboard.row(KeyboardButton("üéì –ü—Ä–æ—Ñ–µ—Å—Å–∏–∏"))
menu_keyboard.row(KeyboardButton("üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ"))
menu_keyboard.row(KeyboardButton("‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã"))
menu_keyboard.row(KeyboardButton("üåê –ü–æ—Å–µ—Ç–∏—Ç—å –°–∞–π—Ç"))
menu_keyboard.row(KeyboardButton("üß≠ –ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è"))
menu_keyboard.row(KeyboardButton("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä", request_contact=True))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@bot.message_handler(content_types=["contact"])
def phone_number_handler(message: Message):
    if message.contact:
        user_id = message.chat.id
        phone_number = message.contact.phone_number
        save_phone_number(user_id, phone_number)
        bot.send_message(user_id, "–°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω.", reply_markup=menu_keyboard)

# –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_answers = {}
active_users = set()
user_current_menu = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=["start"])
def start_handler(message: Message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª:", reply_markup=menu_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@bot.message_handler(func=lambda message: message.text in ["üìñ –û –∫–æ–ª–ª–µ–¥–∂–µ", "üéì –ü—Ä–æ—Ñ–µ—Å—Å–∏–∏", "üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ", "‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã","üåê –ü–æ—Å–µ—Ç–∏—Ç—å –°–∞–π—Ç", "üß≠ –ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è"])
def menu_handler(message: Message):
    user_id = message.chat.id
    text = message.text
    
    if text == "üìñ –û –∫–æ–ª–ª–µ–¥–∂–µ":
        show_college_submenu(user_id)
    elif text == "üéì –ü—Ä–æ—Ñ–µ—Å—Å–∏–∏":
        bot.send_message(user_id, TL.professions, parse_mode='Markdown')
    elif text == "üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ":
        bot.send_message(user_id, "–£–ª–∏—Ü–∞ –ú—É—Å—Ç–∞—Ñ—ã –û–∑—Ç—é—Ä–∫–∞, 5–∞\n –ë–æ—Å—Ç–∞–Ω–¥—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω, –ê–ª–º–∞—Ç—ã\n üìç [–û—Ç–∫—Ä—ã—Ç—å –≤ –∫–∞—Ä—Ç–∞—Ö](https://go.2gis.com/HfMFb)", parse_mode='Markdown')
    elif text == "‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        bot.send_message(user_id, TL.contact, parse_mode='Markdown', disable_web_page_preview=True)
    elif text == "üåê –ü–æ—Å–µ—Ç–∏—Ç—å –°–∞–π—Ç":
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(KeyboardButton("üåê –û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç", web_app=WebAppInfo(url="https://cmab.edu.kz")))
        keyboard.row(KeyboardButton("üîô –ù–∞–∑–∞–¥"))
        bot.send_message(user_id, "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç:", reply_markup=keyboard)
    elif text == "üß≠ –ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è":
        start_career_test(user_id)

# –ü–æ–¥–º–µ–Ω—é –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û –∫–æ–ª–ª–µ–¥–∂–µ"
def show_college_submenu(user_id):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row(KeyboardButton("üìÖ –î–∞—Ç–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏—è –∏ –∏—Å—Ç–æ—Ä–∏—è –∫–æ–ª–ª–µ–¥–∂–∞"))
    keyboard.row(KeyboardButton("üë©‚Äçüè´ –†–∞–±–æ—á–∏–µ –∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ø–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–º"))
    keyboard.row(KeyboardButton("üéâ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ –≤–Ω–µ—É—á–µ–±–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"))
    keyboard.row(KeyboardButton("ü§ñ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ —É—Ä–æ–∫–∞—Ö –∏ –∞–∫—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π"))
    keyboard.row(KeyboardButton("üîô –ù–∞–∑–∞–¥"))
    
    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –æ –∫–æ–ª–ª–µ–¥–∂–µ:", reply_markup=keyboard)
    user_current_menu[user_id] = 'college'

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
def start_career_test(user_id):
    active_users.add(user_id)
    user_answers[user_id] = []
    ask_career_question(user_id, 0)

# –ó–∞–¥–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞ –≤ —Ç–µ—Å—Ç–µ
def ask_career_question(user_id: int, index: int):
    if index < len(TL.career_questions):
        question, options = TL.career_questions[index]
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        
        for option in options:
            keyboard.add(KeyboardButton(option))
        
        keyboard.row(KeyboardButton("‚ùå –í—ã–π—Ç–∏ –∏–∑ —Ç–µ—Å—Ç–∞"))  # –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
        
        bot.send_message(user_id, question, reply_markup=keyboard)
    else:
        finish_career_test(user_id)

# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
def finish_career_test(user_id: int):
    result = TL.career_results.get(tuple(user_answers.get(user_id, [])), "")
    bot.send_message(user_id, result, reply_markup=menu_keyboard)
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –ë–î
    user_info = bot.get_chat(user_id)
    username = user_info.username if user_info.username else "–ù–µ —É–∫–∞–∑–∞–Ω"
    save_result(user_id, username, result)
   
    # –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    active_users.discard(user_id)
    user_answers.pop(user_id, None)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —Ç–µ—Å—Ç–∞
@bot.message_handler(func=lambda message: message.chat.id in active_users)
def career_answer_handler(message: Message):
    user_id = message.chat.id
    text = message.text

    if text == "‚ùå –í—ã–π—Ç–∏ –∏–∑ —Ç–µ—Å—Ç–∞":
        exit_career_test(user_id)
        return

    if user_id not in user_answers:
        return

    user_answers[user_id].append(text)
    ask_career_question(user_id, len(user_answers[user_id]))

# –§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ç–µ—Å—Ç–∞
def exit_career_test(user_id):
    bot.send_message(user_id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞.", reply_markup=menu_keyboard)
    
    # –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    active_users.discard(user_id)
    user_answers.pop(user_id, None)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
@bot.message_handler(func=lambda message: message.text == "üîô –ù–∞–∑–∞–¥")
def back_handler(message: Message):
    user_id = message.chat.id
    bot.send_message(user_id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥.", reply_markup=menu_keyboard)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.infinity_polling()