import telebot
from telebot.types import Message, ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
import textlines as TL

TOKEN = "7623890164:AAGjbXji5sklmFccgwd3Z30xZRFNS0ZkDU4"

bot = telebot.TeleBot(TOKEN)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
menu_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
menu_keyboard.row(KeyboardButton("üìñ –û –∫–æ–ª–ª–µ–¥–∂–µ"))
menu_keyboard.row(KeyboardButton("üéì –ü—Ä–æ—Ñ–µ—Å—Å–∏–∏"))
menu_keyboard.row(KeyboardButton("üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ"))
menu_keyboard.row(KeyboardButton("‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã"))
menu_keyboard.row(KeyboardButton("üåê –ü–æ—Å–µ—Ç–∏—Ç—å –°–∞–π—Ç"))
menu_keyboard.row(KeyboardButton("üß≠ –ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è"))

# –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_answers = {}
active_users = set()
user_current_menu = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=["start"])
def start_handler(message: Message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª:", reply_markup=menu_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@bot.message_handler(func=lambda message: message.text in ["üìñ –û –∫–æ–ª–ª–µ–¥–∂–µ", "üéì –ü—Ä–æ—Ñ–µ—Å—Å–∏–∏", "üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ", "‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã","üåê –ü–æ—Å–µ—Ç–∏—Ç—å –°–∞–π—Ç", "üß≠ –ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è"])
def menu_handler(message: Message):
    user_id = message.chat.id
    text = message.text
    
    if text == "üìñ –û –∫–æ–ª–ª–µ–¥–∂–µ":
        show_college_submenu(user_id)
    elif text == "üéì –ü—Ä–æ—Ñ–µ—Å—Å–∏–∏":
        bot.send_message(user_id, TL.professions, parse_mode='Markdown')
    elif text == "üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ":
        bot.send_message(user_id, "–£–ª–∏—Ü–∞ –ú—É—Å—Ç–∞—Ñ—ã –û–∑—Ç—é—Ä–∫–∞, 5–∞\n –ë–æ—Å—Ç–∞–Ω–¥—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω, –ê–ª–º–∞—Ç—ã.\n üìç [–û—Ç–∫—Ä—ã—Ç—å –≤ –∫–∞—Ä—Ç–∞—Ö](https://go.2gis.com/HfMFb)", parse_mode="Markdown", disable_web_page_preview=True)
    elif text == "‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        bot.send_message(user_id, TL.contact, parse_mode='Markdown', disable_web_page_preview=True)
    elif text == "üåê –ü–æ—Å–µ—Ç–∏—Ç—å –°–∞–π—Ç":
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(KeyboardButton("üåê –û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç", web_app=WebAppInfo(url="https://cmab.edu.kz")))
        keyboard.row(KeyboardButton("üîô –ù–∞–∑–∞–¥"))
        bot.send_message(user_id, "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç:", reply_markup=keyboard)

    elif text == "üß≠ –ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è":
        start_career_test(user_id)

# –ü–æ–¥–º–µ–Ω—é –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û –∫–æ–ª–ª–µ–¥–∂–µ"
def show_college_submenu(user_id):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row(KeyboardButton("üìÖ –î–∞—Ç–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏—è –∏ –∏—Å—Ç–æ—Ä–∏—è –∫–æ–ª–ª–µ–¥–∂–∞"))
    keyboard.row(KeyboardButton("üë©‚Äçüè´ –†–∞–±–æ—á–∏–µ –∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ø–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–º"))
    keyboard.row(KeyboardButton("üéâ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ –≤–Ω–µ—É—á–µ–±–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"))
    keyboard.row(KeyboardButton("ü§ñ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ —É—Ä–æ–∫–∞—Ö –∏ –∞–∫—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π"))
    keyboard.row(KeyboardButton("üîô –ù–∞–∑–∞–¥"))
    
    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –æ –∫–æ–ª–ª–µ–¥–∂–µ:", reply_markup=keyboard)
    user_current_menu[user_id] = 'college'

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
def start_career_test(user_id):
    active_users.add(user_id)
    user_answers[user_id] = []
    ask_career_question(user_id, 0)
    

# –ó–∞–¥–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞ –≤ —Ç–µ—Å—Ç–µ
def ask_career_question(user_id: int, index: int):
    if index < len(TL.career_questions):
        question, options = TL.career_questions[index]
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        for option in options:
            keyboard.add(KeyboardButton(option))
        bot.send_message(user_id, question, reply_markup=keyboard)
    else:
        finish_career_test(user_id)

# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
def finish_career_test(user_id: int):
    result = TL.career_results.get(tuple(user_answers.get(user_id, [])), "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
    bot.send_message(user_id, result, reply_markup=menu_keyboard)
    
    # –£–±–∏—Ä–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö
    active_users.discard(user_id)
    
    # –£–¥–∞–ª—è–µ–º –æ—Ç–≤–µ—Ç—ã –∏ –º–µ–Ω—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    user_answers.pop(user_id, None)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–µ–Ω—é –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
    if user_id in user_current_menu:
        del user_current_menu[user_id]


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —Ç–µ—Å—Ç–∞
@bot.message_handler(func=lambda message: message.chat.id in active_users)
def career_answer_handler(message: Message):
    user_id = message.chat.id
    if user_id not in user_answers:
        return
    user_answers[user_id].append(message.text)
    ask_career_question(user_id, len(user_answers[user_id]))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
@bot.message_handler(func=lambda message: message.text == "üîô –ù–∞–∑–∞–¥")
def back_handler(message: Message):
    user_id = message.chat.id
    current_menu = user_current_menu.get(user_id)

    if current_menu == 'college':
        bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª:", reply_markup=menu_keyboard)
        del user_current_menu[user_id]
    else:
        bot.send_message(user_id, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥.", reply_markup=menu_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –∏–∑ –ø–æ–¥–º–µ–Ω—é "–û –∫–æ–ª–ª–µ–¥–∂–µ"
@bot.message_handler(func=lambda message: message.text in ["üìÖ –î–∞—Ç–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏—è –∏ –∏—Å—Ç–æ—Ä–∏—è –∫–æ–ª–ª–µ–¥–∂–∞", "üë©‚Äçüè´ –†–∞–±–æ—á–∏–µ –∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ø–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–º", "üéâ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ –≤–Ω–µ—É—á–µ–±–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", "ü§ñ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ —É—Ä–æ–∫–∞—Ö –∏ –∞–∫—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π"])
def college_submenu_handler(message: Message):
    user_id = message.chat.id
    text = message.text
    responses = {
        "üìÖ –î–∞—Ç–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏—è –∏ –∏—Å—Ç–æ—Ä–∏—è –∫–æ–ª–ª–µ–¥–∂–∞": TL.college_history,
        "üë©‚Äçüè´ –†–∞–±–æ—á–∏–µ –∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ø–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–º": TL.college_specialists,
        "üéâ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ –≤–Ω–µ—É—á–µ–±–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": TL.college_activities,
        "ü§ñ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ —É—Ä–æ–∫–∞—Ö –∏ –∞–∫—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π": TL.college_tech_activities,
    }
    bot.send_message(user_id, responses.get(text, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞."))

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.infinity_polling()
